<?php

/**
 * Elgg session management
 * Functions to manage logins
 *
 * @package Elgg.Core
 * @subpackage Session
 */
/** Elgg magic session */
global $SESSION;

/**
 * Return the current logged in user, or NULL if no user is logged in.
 *
 * If no user can be found in the current session, a plugin
 * hook - 'session:get' 'user' to give plugin authors another
 * way to provide user details to the ACL system without touching the session.
 *
 * @return ElggUser
 */
function elgg_get_logged_in_user_entity() {
    global $SESSION;

    if (isset($SESSION)) {
        return $SESSION['user'];
    }

    return NULL;
}

/**
 * Return the current logged in user by id.
 *
 * @see elgg_get_logged_in_user_entity()
 * @return int
 */
function elgg_get_logged_in_user_guid() {
    $user = elgg_get_logged_in_user_entity();
    if ($user) {
        return $user->guid;
    }

    return 0;
}

/**
 * Returns whether or not the user is currently logged in
 *
 * @return bool
 */
function elgg_is_logged_in() {
    $user = elgg_get_logged_in_user_entity();

    if ((isset($user)) && ($user instanceof ElggUser) && ($user->guid > 0)) {
        return true;
    }

    return false;
}

/**
 * Returns whether or not the user is currently logged in and that they are an admin user.
 *
 * @return bool
 */
function elgg_is_admin_logged_in() {
    $user = elgg_get_logged_in_user_entity();

    if ((elgg_is_logged_in()) && $user->isAdmin()) {
        return TRUE;
    }

    return FALSE;
}

/**
 * Check if the given user has full access.
 *
 * @todo: Will always return full access if the user is an admin.
 *
 * @param int $user_guid The user to check
 *
 * @return bool
 * @since 1.7.1
 */
function elgg_is_admin_user($user_guid) {
    global $CONFIG;
    // cannot use magic metadata here because of recursion
    // must support the old way of getting admin from metadata
    // in order to run the upgrade to move it into the users table.
    $version = (int) datalist_get('version');

    if ($version < 2010040201) {
        $admin = get_metastring_id('admin');
        $yes = get_metastring_id('yes');
        $one = get_metastring_id('1');

        $query = "SELECT * FROM {$CONFIG->dbprefix}users_entity as e,
			{$CONFIG->dbprefix}metadata as md
			WHERE (

